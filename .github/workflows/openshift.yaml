# Copyright 2020 Oracle Corporation and/or its affiliates.  All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at
# http://oss.oracle.com/licenses/upl.

# ---------------------------------------------------------------------------
# Coherence Operator GitHub Actions K8s Certification build.
# ---------------------------------------------------------------------------
name: OpenShift Certification

on:
  push:
    branches:
      - 'openshift'

env:
  OCR_DOCKER_USERNAME: ${{ secrets.OCR_DOCKER_USERNAME }}
  OCR_DOCKER_PASSWORD: ${{ secrets.OCR_DOCKER_PASSWORD }}
  MAVEN_USER: ${{ secrets.MAVEN_USER }}
  MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
  SUPER_SECRET: ${{ secrets.OCM_API_TOKEN }}
  RELEASE_IMAGE_PREFIX: "localhost:5000/"
  COHERENCE_IMAGE: "container-registry.oracle.com/middleware/coherence:14.1.1.0.0"

jobs:
  build:
    runs-on: macos-10.15

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install Docker
      shell: bash
      run: brew cask install docker

    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'

    - name: Cache Go Modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mods-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mods-

    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up Go
      uses: actions/setup-go@v2-beta
      with:
        go-version: 1.13.x

    - name: Docker Login OCR
      run: |
        echo $OCR_DOCKER_PASSWORD | docker login container-registry.oracle.com -u $OCR_DOCKER_USERNAME --password-stdin

    - name: Install CRC
      shell: bash
      run: |
        echo "$SUPER_SECRET" > token
        echo "$SUPER_SECRET2" > sudo.password
        sh ./hack/install-crc.sh

#    - name: Certification Tests
#      shell: bash
#      run: ./hack/k8s-certification.sh

    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: test-output
        path: build/_output/test-logs
